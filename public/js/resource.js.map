{"version":3,"sources":["../../src/js/resource.js"],"names":["Material","props","Object","assign","amt","img","id","name","save","seen","$goldSidebar","$","$goldSidebarAmt","ResourceManager","materials","createSave","forEach","m","push","loadSave","mat","idToMaterial","addNewMaterial","material","addMaterial","res","skipAnimation","find","Math","min","refreshMaterial","canAffordMaterial","item","mcost","entries","materialAvailable","deductMoney","deductMaterial","resource","refundMaterial","materialIcon","type","recipeList","idToItem","itemPic","GuildManager","idToGuild","icon","formatCost","sidebarMaterial","resID","available","undefined","Inventory","itemCount","matID","charAt","materialsEmpty","filter","every","nameForWorkerSac","isAMaterial","some","reOrderMats","sort","a","b","tier","fortuneResource","lvl","resources","r","fortuneLvl","week","currentWeek","good","length","great","epic","materialSeenDungeon","dungeonID","matids","MobManager","allMobDropsByDungeon","map","$materials","initializeMats","d","addClass","attr","d1","html","d2","formatToUnits","append","hide","$noMaterialDiv","hardMatRefresh","show","formatWithCommas","TinkerManager","tinkerMats","includes","refreshTinkerMats","DungeonManager","dungeonMatRefresh","refreshMonsterReward","document","on","e","preventDefault","tabClick","currentTarget","initializeRecipes"],"mappings":"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","sourcesContent":["\"use strict\";\r\n\r\nclass Material{\r\n    constructor (props) {\r\n        Object.assign(this, props);\r\n        this.amt = 0;\r\n        this.img = `<img src='/assets/images/resources/${this.id}.png' alt='${this.name}'>`;\r\n    }\r\n    createSave() {\r\n        const save = {};\r\n        save.id = this.id;\r\n        save.amt = this.amt;\r\n        save.seen = this.seen;\r\n        return save;\r\n    }\r\n    loadSave(save) {\r\n        this.amt = save.amt;\r\n        this.seen = save.seen;\r\n    }\r\n}\r\n\r\nconst $goldSidebar = $(\"#goldSidebar\");\r\nconst $goldSidebarAmt = $(\"#goldSidebarAmt\");\r\n\r\nconst ResourceManager = {\r\n    materials : [],\r\n    createSave() {\r\n        const save = [];\r\n        this.materials.forEach(m=> {\r\n            save.push(m.createSave());\r\n        });\r\n        return save;\r\n    },\r\n    loadSave(save) {\r\n        save.forEach(m=> {\r\n            const mat = this.idToMaterial(m.id);\r\n            mat.loadSave(m);\r\n        });\r\n    },\r\n    addNewMaterial(material) {\r\n        this.materials.push(material);\r\n    },\r\n    addMaterial(res,amt,skipAnimation) {\r\n        const mat = this.materials.find(mat => mat.id === res);\r\n        mat.amt += amt;\r\n        if (mat.id !== \"M001\") mat.amt = Math.min(mat.amt,1000);\r\n        mat.seen = true;\r\n        if (skipAnimation) return;\r\n        refreshMaterial(res);\r\n    },\r\n    canAffordMaterial(item) {\r\n        if (item.mcost === null) return true;\r\n        for (const [material, amt] of Object.entries(item.mcost)) {\r\n            if (amt > this.materialAvailable(material)) return false;\r\n        }\r\n        return true;\r\n    },\r\n    deductMoney(amt) {\r\n        this.addMaterial(\"M001\",-amt);\r\n    },\r\n    deductMaterial(item,skipAnimation) {\r\n        if (item.mcost === null) return;\r\n        for (const [resource, amt] of Object.entries(item.mcost)) {\r\n            this.addMaterial(resource,-amt,skipAnimation);\r\n        }\r\n    },\r\n    refundMaterial(item) {\r\n        if (item.mcost === null) return;\r\n        for (const [resource,amt] of Object.entries(item.mcost)) {\r\n            this.addMaterial(resource,amt);\r\n        }\r\n    },\r\n    materialIcon(type) {\r\n        if (type[0] === \"R\") return recipeList.idToItem(type).itemPic();\r\n        if (type[0] === \"G\") return GuildManager.idToGuild(type).icon;\r\n        return `<img src=\"/assets/images/resources/${type}.png\" alt=\"${type}\">`\r\n    },\r\n    formatCost(res,amt) {\r\n        return `<div class=\"matIcon\">${this.materialIcon(res)}</div> <span class=\"matAmt\">${amt}</span>`;\r\n    },\r\n    sidebarMaterial(resID) {\r\n        const res = this.materials.find(resource => resource.id == resID)\r\n        return `${this.materialIcon(resID)}&nbsp;&nbsp${res.amt}`\r\n    },\r\n    available(res,amt) {\r\n        const item = recipeList.idToItem(res);\r\n        if (item === undefined) {\r\n            return this.idToMaterial(res).amt >= amt;\r\n        }\r\n        return Inventory.itemCount(res,0) >= amt;\r\n    },\r\n    materialAvailable(matID) {\r\n        if (matID.charAt(0) === \"R\") {\r\n            return Inventory.itemCount(matID,0);\r\n        }\r\n        return this.materials.find(mat => mat.id === matID).amt;\r\n    },\r\n    materialsEmpty() {\r\n        return ResourceManager.materials.filter(mat => mat.id !== \"M001\").every(mat => mat.amt === 0)\r\n    },\r\n    nameForWorkerSac(mat) {\r\n        const item = recipeList.idToItem(mat);\r\n        if (item === undefined) return this.idToMaterial(mat).name;\r\n        return item.name;\r\n    },\r\n    idToMaterial(matID) {\r\n        return this.materials.find(m=>m.id === matID);\r\n    },\r\n    isAMaterial(matID) {\r\n        return this.materials.some(m=>m.id === matID);\r\n    },\r\n    reOrderMats() {\r\n        this.materials.sort((a,b) => a.tier - b.tier);\r\n    },\r\n    fortuneResource(lvl) {\r\n        const resources = this.materials.filter(r=>r.fortuneLvl===lvl);\r\n        const week = currentWeek();\r\n        const good = resources[week%resources.length].id;\r\n        const great = resources[(week+1)%resources.length].id;\r\n        const epic = resources[(week+2)%resources.length].id;\r\n        return [good,great,epic];\r\n    },\r\n    materialSeenDungeon(dungeonID) {\r\n        //returns a list of materials you've seen\r\n        if (dungeonID === \"D004\") return [];\r\n        const matids = MobManager.allMobDropsByDungeon(dungeonID);\r\n        const materials = matids.map(m => this.idToMaterial(m));\r\n        return materials.filter(m => m.seen);\r\n    },\r\n}\r\n\r\nconst $materials = $(\"#materials\");\r\n\r\nfunction initializeMats() {\r\n    ResourceManager.reOrderMats();\r\n    ResourceManager.materials.forEach(mat => {\r\n        if (mat.id != \"M001\") {\r\n            const d = $(\"<div/>\").addClass(\"material tooltip\").attr({\"data-tooltip\":\"material_desc\",\"data-tooltip-value\":mat.id}).attr(\"id\",mat.id);\r\n            const d1 = $(\"<div/>\").addClass(\"materialName\").html(mat.img);\r\n            const d2 = $(\"<div/>\").addClass(\"materialAmt\").attr(\"id\",\"amt\"+mat.id).html(formatToUnits(mat.amt,2));\r\n            d.append(d1,d2);\r\n            d.hide();\r\n            $materials.append(d);\r\n        }\r\n    })\r\n}\r\n\r\nconst $noMaterialDiv = $(\"#noMaterialDiv\");\r\n\r\nfunction hardMatRefresh() {\r\n    //used when we first load in\r\n    if (ResourceManager.materialsEmpty()) $noMaterialDiv.show();\r\n    else $noMaterialDiv.hide();\r\n    ResourceManager.materials.forEach(mat=> {\r\n        if (mat.amt === 0) $(\"#\"+mat.id).hide();\r\n        else $(\"#\"+mat.id).show();\r\n        $(\"#amt\"+mat.id).html(mat.amt);\r\n        if (mat.id === \"M001\") {\r\n            $goldSidebarAmt.html(formatToUnits(mat.amt,2));\r\n            $goldSidebar.addClass(\"tooltip\").attr({\"data-tooltip\": \"gold_value\", \"data-tooltip-value\": formatWithCommas(mat.amt)})\r\n        }\r\n    })\r\n}\r\n\r\nfunction refreshMaterial(matID) {\r\n    const mat = ResourceManager.idToMaterial(matID);\r\n    if (ResourceManager.materialsEmpty()) $noMaterialDiv.show();\r\n    else $noMaterialDiv.hide();\r\n    if (mat.amt === 0) $(\"#\"+matID).hide();\r\n    else $(\"#\"+matID).show();\r\n    $(\"#amt\"+matID).html(formatToUnits(mat.amt,2));\r\n    $(\"#dsbr\"+matID).html(mat.amt);\r\n    if (TinkerManager.tinkerMats().includes(matID)) refreshTinkerMats();\r\n    DungeonManager.dungeonMatRefresh(mat.id);\r\n    if (mat.id === \"M002\") refreshMonsterReward();\r\n    if (mat.id !== \"M001\") return;\r\n    $goldSidebarAmt.html(formatToUnits(mat.amt,2));\r\n    $goldSidebar.addClass(\"tooltip\").attr({\"data-tooltip\": \"gold_value\", \"data-tooltip-value\": formatWithCommas(mat.amt)});\r\n}\r\n\r\n$(document).on(\"click\",\".material\",(e) => {\r\n    e.preventDefault();\r\n    tabClick(e, \"recipesTab\");\r\n    const matID = $(e.currentTarget).attr(\"id\");\r\n    initializeRecipes(matID,\"default\");\r\n});"],"file":"resource.js"}