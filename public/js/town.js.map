{"version":3,"sources":["../../src/js/town.js"],"names":["BuildingState","Object","freeze","hidden","unseen","seen","built","$buildingList","$","$buildingHeader","$buildingRecipes","Building","props","assign","status","save","id","TownManager","lastBldg","lastType","buildings","purgeSlots","addBuilding","building","push","createSave","forEach","b","loadSave","undefined","bsave","idToBuilding","find","typeToBuilding","type","shorthand","recipeIDToBuilding","recipeID","buildingStatus","map","getStatus","buildingRecipes","unseenLeft","includes","buildingPerk","setStatus","recipeList","idToItem","owned","refreshSideTown","buildingsOwned","some","value","unlockBldg","removeClass","addClass","showBldg","$emptyTown","$townTab","$townTabLink","show","hide","empty","d","attr","data","html","name","appendTo","$buildBuilding","da","db","dc","dd","description","append","upper","replace","c","toUpperCase","buildingText","window","buildScreen","document","on","e","preventDefault","currentTarget","recipes","filter","r","recipe","recipeCardInfo","recipeCardFront","recipeCardBack","recipeCardContainer","d5"],"mappings":"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","sourcesContent":["\"use strict\";\r\n\r\nconst BuildingState = Object.freeze({hidden:-1,unseen:0,seen:1,built:2});\r\n\r\nconst $buildingList = $(\"#buildingList\");\r\nconst $buildingHeader = $(\"#buildingHeader\");\r\nconst $buildingRecipes = $(\"#buildingRecipes\");\r\n\r\nclass Building {\r\n    constructor(props) {\r\n        Object.assign(this, props);\r\n        this.status = BuildingState.hidden;\r\n    }\r\n    createSave() {\r\n        const save = {};\r\n        save.status = this.status;\r\n        save.id = this.id;\r\n        return save;\r\n    }\r\n    loadSave(save) {\r\n        this.status = save.status;\r\n    }\r\n    getStatus() {\r\n        return this.status;\r\n    }\r\n    unlocked() {\r\n        return this.status > 0;\r\n    }\r\n    setStatus(status) {\r\n        this.status = status;\r\n    }\r\n}\r\n\r\nconst TownManager = {\r\n    lastBldg : null,\r\n    lastType : null,\r\n    buildings : [],\r\n    purgeSlots : false,\r\n    addBuilding(building) {\r\n        this.buildings.push(building);\r\n    },\r\n    createSave() {\r\n        const save = {};\r\n        save.buildings = [];\r\n        this.buildings.forEach(b=>{\r\n            save.buildings.push(b.createSave());\r\n        })\r\n        return save;\r\n    },\r\n    loadSave(save) {\r\n        if (save.buildings === undefined) return;\r\n        save.buildings.forEach(bsave=> {\r\n            const building = this.idToBuilding(bsave.id);\r\n            building.loadSave(bsave);\r\n        });\r\n    },\r\n    idToBuilding(id) {\r\n        return this.buildings.find(b=>b.id === id);\r\n    },\r\n    typeToBuilding(type) {\r\n        return this.buildings.find(b=>b.shorthand === type);\r\n    },\r\n    recipeIDToBuilding(recipeID) {\r\n        return this.buildings.find(b=>b.recipeID === recipeID);\r\n    },\r\n    buildingStatus() {\r\n        return this.buildings.map(b=>b.getStatus());\r\n    },\r\n    buildingRecipes() {\r\n        return this.buildings.map(b=>b.recipeID);\r\n    },\r\n    unseenLeft() {\r\n        return this.buildingStatus().includes(BuildingState.unseen);\r\n    },\r\n    buildingPerk(type) {\r\n        const building = this.typeToBuilding(type);\r\n        building.setStatus(BuildingState.unseen);\r\n        recipeList.idToItem(building.recipeID).owned = true;\r\n        refreshSideTown();\r\n    },\r\n    buildingsOwned() {\r\n        return this.buildings.some(building => building.getStatus() !== BuildingState.hidden);\r\n    },\r\n    status(type) {\r\n        const building = this.typeToBuilding(type);\r\n        return building.getStatus();\r\n    },\r\n    setStatus(type,value) {\r\n        const building = this.typeToBuilding(type);\r\n        building.setStatus(value);\r\n    },\r\n    unlockBldg(recipeID) {\r\n        const building = this.recipeIDToBuilding(recipeID);\r\n        const type = building.shorthand;\r\n        building.setStatus(BuildingState.built);\r\n        this.lastBldg = type;\r\n        this.purgeSlots = true;\r\n        $(\".buildingName\").removeClass(\"selected\");\r\n        $(`#${building.shorthand}Bldg`).addClass(\"selected\");\r\n        refreshSideTown();\r\n        showBldg(type);\r\n    }\r\n}\r\n\r\nconst $emptyTown = $(\"#emptyTown\");\r\nconst $townTab = $(\"#townTab\");\r\nconst $townTabLink = $(\"#townTabLink\");\r\n\r\nfunction refreshSideTown() {\r\n    if (TownManager.unseenLeft()) $townTab.addClass(\"hasEvent\");\r\n    else $townTab.removeClass(\"hasEvent\");\r\n    if (!TownManager.buildingsOwned()) {\r\n        $emptyTown.show();\r\n        $buildingList.hide();\r\n        $townTabLink.hide();\r\n        return;\r\n    }\r\n    $townTabLink.show();\r\n    $emptyTown.hide();\r\n    $buildingList.show().empty();\r\n    TownManager.buildings.forEach(building => {\r\n        if (building.getStatus() >= 0) {\r\n            const d = $(\"<div/>\").addClass(\"buildingName\").attr(\"id\",`${building.shorthand}Bldg`).data(\"bldgType\",building.shorthand).html(building.name).appendTo($buildingList);\r\n            if (TownManager.lastBldg === building.shorthand) d.addClass(\"selected\");\r\n            if (building.getStatus() === BuildingState.unseen) d.addClass(\"hasEvent\");\r\n        }\r\n    });\r\n}\r\n\r\nconst $buildBuilding = $(\"#buildBuilding\");\r\n\r\nfunction showBldg(type) {\r\n    const building = TownManager.typeToBuilding(type);\r\n    $(\".buildingTab\").removeClass(\"bldgTabActive\").hide();\r\n    $(`#${type}Building`).addClass(\"bldgTabActive\");\r\n    $buildingHeader.empty();\r\n    $buildBuilding.hide();\r\n    const d = $(\"<div/>\").addClass(`buildingInfo building${building.shorthand}`);\r\n    const da = $(\"<div/>\").addClass(\"buildingInfoBackground\");\r\n    const db = $(\"<div/>\").addClass(\"buildingInfoImage\").html(\"<img src='/assets/images/recipes/noitem.png'>\")\r\n    if (building.getStatus() === BuildingState.built) db.html(`<img src='/assets/images/townImages/${building.shorthand}Building/${building.shorthand}_building.png'>`);\r\n    const dc = $(\"<div/>\").addClass(\"buildingInfoName\").html(`<h2>${building.name}</h2>`);\r\n    const dd = $(\"<div/>\").addClass(\"buildingInfoDesc\").html(building.description);\r\n    if (building.getStatus() !== BuildingState.built) d.addClass(\"buildInProgress\");\r\n    d.append(da,db,dc,dd);\r\n    $buildingHeader.append(d);\r\n    const upper = building.shorthand.replace(/^\\w/, c => c.toUpperCase());\r\n    const buildingText = `initiate${upper}Bldg`;\r\n    if (building.getStatus() === BuildingState.built) window[buildingText]();\r\n    else {\r\n        $buildBuilding.show();\r\n        buildScreen(building.shorthand);\r\n    }\r\n}\r\n\r\n$(document).on('click', \".buildingName\", (e) => {\r\n    e.preventDefault();\r\n    const type = $(e.currentTarget).data(\"bldgType\");\r\n    if (TownManager.lastBldg === type) return;\r\n    TownManager.lastBldg = type;\r\n    const building = TownManager.typeToBuilding(type);\r\n    if (building.getStatus() === BuildingState.unseen) building.setStatus(BuildingState.seen);\r\n    $(\".buildingName\").removeClass(\"selected\");\r\n    if (!TownManager.unseenLeft()) $(\"#townTab\").removeClass(\"hasEvent\");\r\n    $(e.currentTarget).addClass(\"selected\");\r\n    $(e.currentTarget).removeClass(\"hasEvent\");\r\n    showBldg(type);\r\n});\r\n\r\n\r\nfunction buildScreen(type) {\r\n    $buildingRecipes.empty();\r\n    TownManager.lastType = type;\r\n    recipeList.recipes.filter(r=>r.type===type).forEach(recipe => {\r\n        const recipeCardInfo = $('<div/>').addClass('recipeCardInfo').append(recipeCardFront(recipe),recipeCardBack(recipe))\r\n        const recipeCardContainer = $('<div/>').addClass('recipeCardContainer buildingCard').data(\"recipeID\",recipe.id).attr(\"id\",\"rr\"+recipe.id).append(recipeCardInfo);\r\n        $buildingRecipes.append(recipeCardContainer);\r\n    });\r\n    const d5 = $(\"<div/>\").addClass(\"buildingInstr\");\r\n        $(\"<div/>\").addClass(\"buildingInstrHead\").html(\"Instruction\").appendTo(d5);\r\n        $(\"<div/>\").addClass(\"buildingInstrDesc\").html(\"Construct the building recipe to unlock this building permanently!\").appendTo(d5);\r\n    $buildingRecipes.append(d5);\r\n}"],"file":"town.js"}