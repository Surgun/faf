{"version":3,"sources":["../../src/js/main.js"],"names":["player","saveStart","Date","now","lastTime","timeWarp","afterLoad","$","html","PatchManager","lastVersion","refreshPatchNotes","initializeRecipes","initializeMats","loadGame","WorkerManager","gainWorker","recipeList","idToItem","owned","HeroManager","idToHero","achievementStats","startTime","GuildManager","guilds","forEach","g","generateNewOrder","refreshMasteryBar","refreshInventory","refreshSideWorkers","initializeHeroList","refreshRecipeFilters","hardMatRefresh","refreshProgress","initializeSideBarDungeon","refreshSideTown","refreshCraftedCount","initializeGuilds","refreshInventoryPlaces","canCraft","checkCraftableStatus","setInterval","mainLoop","recipeFilterType","recipeFilterString","recipeFilterList","populateTinkerRange","initiateMonsterHall","refreshMonsterReward","refreshMonsterRewardLines","refreshCraftTimes","repopulateUnmastered","refreshAllRecipeMastery","loading_screen","finish","loadMessages","selectLoadMessage","randomNumber","Math","floor","random","length","pleaseWait","logo","backgroundColor","loadingHtml","loadMisc","openTab","elapsedTime","min","setTimePlayed","saveGame","DungeonManager","addTime","FusionManager","SynthManager","actionSlotManager","actionSlotVisualManager","updateSlots","patchTimer","TinkerManager","TownManager","purgeSlots","removeBldgSlots"],"mappings":"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","sourcesContent":["\"use strict\";\r\n\r\nconst player = {\r\n    saveStart : Date.now(),\r\n    lastTime : Date.now(),\r\n    timeWarp : 1,\r\n}\r\n\r\nfunction afterLoad() {\r\n    $(\"#versionNum\").html(PatchManager.lastVersion());\r\n    refreshPatchNotes();\r\n    initializeRecipes();\r\n    initializeMats();\r\n    if (!loadGame()) {\r\n        WorkerManager.gainWorker(\"WN201\");\r\n        recipeList.idToItem(\"R13001\").owned = true;\r\n        HeroManager.idToHero(\"H203\").owned = true;\r\n        achievementStats.startTime = Date.now();\r\n        GuildManager.guilds.forEach(g=>{\r\n            g.generateNewOrder(1);\r\n            g.generateNewOrder(2);\r\n            g.generateNewOrder(3);\r\n        });\r\n    }\r\n    refreshMasteryBar()\r\n    refreshInventory();\r\n    refreshSideWorkers();\r\n    initializeHeroList();\r\n    refreshRecipeFilters();\r\n    hardMatRefresh();\r\n    refreshProgress();\r\n    initializeSideBarDungeon();\r\n    refreshSideTown();\r\n    refreshCraftedCount();\r\n    initializeGuilds();\r\n    refreshInventoryPlaces();\r\n    recipeList.canCraft();\r\n    checkCraftableStatus();\r\n    player.lastTime = Date.now();\r\n    setInterval(mainLoop, 10);\r\n    recipeList.recipeFilterType = \"Light\";\r\n    recipeList.recipeFilterString = \"\";\r\n    recipeFilterList();\r\n    populateTinkerRange();\r\n    initiateMonsterHall();\r\n    refreshMonsterReward();\r\n    refreshMonsterRewardLines();\r\n    refreshCraftTimes();\r\n    GuildManager.repopulateUnmastered();\r\n    refreshAllRecipeMastery();\r\n    loading_screen.finish();\r\n}\r\n\r\n/* Load Message Selection */\r\nconst loadMessages = [\r\n    \"Spreading misinformation.\",\r\n    \"Rewriting all of the code.\",\r\n    \"Delaying Version 0.4.\",\r\n    \"Getting ducks in a row.\",\r\n    \"Increasing functionality by 19%.\",\r\n    \"Making bad puns.\",\r\n    \"Learning Javascript.\",\r\n    \"Translating Latin.\",\r\n    \"Temporarily reviewing accounts.\",\r\n    \"Recoloring sprites.\",\r\n    \"Hyping Elites.\",\r\n    \"Leaking outdated information.\",\r\n    \"Rebooting idea machine.\",\r\n    \"Sourcing locally grown lettuce.\",\r\n    \"Finding cute animal gifs.\",\r\n    \"Introducing game breaking bugs.\",\r\n    \"Lowering self esteem.\",\r\n    \"Redesigning game...again.\",\r\n    \"Deleting important files.\",\r\n    \"2 + 2 = 4 - 1 = 3\"\r\n];\r\n\r\nfunction selectLoadMessage() {\r\n    const randomNumber = Math.floor(Math.random()*loadMessages.length);\r\n    return loadMessages[randomNumber];\r\n}\r\n\r\nconst loading_screen = pleaseWait({\r\n    logo: \"/assets/images/site-logo.png\",\r\n    backgroundColor: 'var(--bg-primary)',\r\n    loadingHtml: `\r\n    <div class=\"loadingMessage\">${selectLoadMessage()}</div>\r\n    <div class=\"spinner\"></div>\r\n    `\r\n});\r\n\r\nloadMisc(); //the others are loaded in order\r\nopenTab(\"recipesTab\");\r\n\r\nfunction mainLoop() {\r\n    let elapsedTime = (Date.now()-player.lastTime)*player.timeWarp;\r\n    elapsedTime = Math.min(elapsedTime,28800000);\r\n    achievementStats.setTimePlayed(elapsedTime);\r\n    saveGame(Date.now()-player.lastTime);\r\n    player.lastTime = Date.now();\r\n    DungeonManager.addTime(elapsedTime);\r\n    FusionManager.addTime(elapsedTime);\r\n    SynthManager.addTime(elapsedTime);\r\n    actionSlotManager.addTime(elapsedTime);\r\n    actionSlotVisualManager.updateSlots();\r\n    PatchManager.patchTimer(elapsedTime);\r\n    TinkerManager.addTime(elapsedTime);\r\n    if (TownManager.purgeSlots) {\r\n        actionSlotManager.removeBldgSlots();\r\n        TownManager.purgeSlots = false;\r\n    }\r\n}"],"file":"main.js"}