{"version":3,"sources":["../../src/js/actionslots.js"],"names":["slotState","Object","freeze","NEEDMATERIAL","CRAFTING","$","document","on","e","preventDefault","stopPropagation","destroyTooltip","slot","parseInt","target","parent","data","actionSlotManager","removeSlot","upgradeSlot","currentTarget","newRarity","toggleAuto","actionSlotVisualManager","updateAutoSell","actionSlot","itemid","slotNum","item","recipeList","idToItem","craftTime","status","save","itemPicName","t","skipAnimation","attemptStart","maxCraft","Inventory","craftToInventory","refreshRecipeMasteryAmt","progress","toFixed","MonsterHall","lineIncrease","type","isMastered","ResourceManager","canAffordMaterial","deductMaterial","autoSellToggle","autoSell","refundMaterial","types","includes","recipeType","gcost","maxSlots","slots","minTime","createSave","forEach","s","push","loadSave","addSlot","length","Notifications","slotsFull","isAlreadySlotted","owned","recipeNotOwned","canProduce","craftWarning","adjustMinTime","refreshSideWorkers","canCraft","checkCraftableStatus","Math","min","map","splice","i","removeBldgSlots","filter","id","addTime","timeRemaining","timeChunk","refreshInventoryAndMaterialPlaces","guildUsage","mats","flattenArray","group","groupArray","materialUsage","material","uniqueMats","Set","freeSlots","$actionSlots","actionSlotVisualSlotTracking","timeRef","progressRef","newActionSlot","d","addClass","attr","html","appendTo","d2","miscIcons","cancelSlot","d3","d3a","alert","s3","d4","toLowerCase","isBuildingMaterial","hide","resList","d5","g","GuildManager","idToGuild","icon","newEmptyActionSlot","d1","emptySlot","slotCount","disableRefresh","updateSlots","empty","newSlot","append","addReference","compareSlot","removeClass","time","msToTime","css","generateTooltip","refreshInventoryPlaces","matID","refreshMaterial"],"mappings":"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","sourcesContent":["\"use strict\";\r\n\r\nconst slotState = Object.freeze({NEEDMATERIAL:0,CRAFTING:1});\r\n\r\n$(document).on(\"click\", \".ASCancel\", (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    destroyTooltip(e);\r\n    const slot = parseInt($(e.target).parent().data(\"slotNum\"));\r\n    actionSlotManager.removeSlot(slot);\r\n});\r\n\r\n$(document).on(\"click\", \".ASBuySlotButton\", (e) => {\r\n    e.preventDefault();\r\n    actionSlotManager.upgradeSlot();\r\n})\r\n\r\n$(document).on(\"click\", \".ASauto\", (e) => {\r\n    e.preventDefault();\r\n    const slot = parseInt($(e.currentTarget).data(\"slotNum\"));\r\n    const newRarity = actionSlotManager.toggleAuto(slot);\r\n    actionSlotVisualManager.updateAutoSell(e,newRarity);\r\n});\r\n\r\nclass actionSlot {\r\n    constructor(itemid,slotNum) {\r\n        this.itemid = itemid;\r\n        this.item = recipeList.idToItem(itemid);\r\n        this.craftTime = 0;\r\n        this.status = slotState.NEEDMATERIAL;\r\n        this.slotNum = slotNum;\r\n    }\r\n    createSave() {\r\n        const save = {};\r\n        save.itemid = this.itemid;\r\n        save.craftTime = this.craftTime;\r\n        save.status = this.status;\r\n        save.slotNum = this.slotNum;\r\n        return save;\r\n    }\r\n    loadSave(save) {\r\n        this.craftTime = save.craftTime;\r\n        this.status = save.status;\r\n        this.slotNum = save.slotNum;\r\n    }\r\n    itemPicName() {\r\n        return this.item.itemPicName();\r\n    }\r\n    addTime(t,skipAnimation) {\r\n        if (this.status === slotState.NEEDMATERIAL) this.attemptStart(skipAnimation);\r\n        if (this.status !== slotState.CRAFTING) {\r\n            this.craftTime = 0;\r\n            return;\r\n        }\r\n        this.craftTime += t;\r\n        if (this.craftTime > this.maxCraft()) {\r\n            this.craftTime -= this.maxCraft();\r\n            Inventory.craftToInventory(this.itemid,skipAnimation);\r\n            if (!skipAnimation) refreshRecipeMasteryAmt(this.item);\r\n            this.status = slotState.NEEDMATERIAL;\r\n            this.attemptStart(skipAnimation);\r\n        }\r\n        this.progress = (this.craftTime/this.maxCraft()).toFixed(3)*100+\"%\";\r\n    }\r\n    maxCraft() {\r\n        return this.item.craftTime * MonsterHall.lineIncrease(this.item.type,0)\r\n    }\r\n    timeRemaining() {\r\n        return this.maxCraft()-this.craftTime;\r\n    }\r\n    attemptStart(skipAnimation) {\r\n        //attempts to consume requried material, if successful start crafting\r\n        if (this.item.isMastered()) {\r\n            this.status = slotState.CRAFTING;\r\n            return;\r\n        }\r\n        if (!ResourceManager.canAffordMaterial(this.item)) return;\r\n        ResourceManager.deductMaterial(this.item,skipAnimation);\r\n        this.status = slotState.CRAFTING;\r\n    }\r\n    autoSellToggle() {\r\n        return this.item.autoSellToggle();\r\n    }\r\n    autoSell() {\r\n        return this.item.autoSell;\r\n    }\r\n    refundMaterial() {\r\n        if (this.status !== slotState.CRAFTING || this.item.isMastered()) return;\r\n        ResourceManager.refundMaterial(this.item);\r\n    }\r\n    isMastered() {\r\n        return this.item.isMastered();\r\n    }\r\n    isBuildingMaterial() {\r\n        const types = [\"foundry\",\"bank\", \"fuse\", \"smith\", \"fortune\"];\r\n        return types.includes(this.item.recipeType);\r\n    }\r\n    resList() {\r\n        return this.item.gcost;\r\n    }\r\n}\r\n\r\nconst actionSlotManager = {\r\n    maxSlots : 1,\r\n    slots : [],\r\n    minTime : 0,\r\n    createSave() {\r\n        const save = {};\r\n        save.maxSlots = this.maxSlots;\r\n        save.slots = [];\r\n        this.slots.forEach(s => {\r\n            save.slots.push(s.createSave());\r\n        })\r\n        save.minTime = this.minTime;\r\n        return save;\r\n    },\r\n    loadSave(save) {\r\n        this.maxSlots = save.maxSlots;\r\n        save.slots.forEach(s => {\r\n            const slot = new actionSlot(s.itemid)\r\n            slot.loadSave(s);\r\n            this.slots.push(slot);\r\n        });\r\n        this.minTime = save.minTime;\r\n    },\r\n    addSlot(itemid) {\r\n        if (this.slots.length >= this.maxSlots) {\r\n            Notifications.slotsFull();\r\n            return;\r\n        }\r\n        const item = recipeList.idToItem(itemid);\r\n        if (item.recipeType !== \"normal\" && this.isAlreadySlotted(itemid)) return;\r\n        if (!item.owned) return Notifications.recipeNotOwned();\r\n        if (!item.canProduce) {\r\n            Notifications.craftWarning();\r\n            return;\r\n        }\r\n        this.slots.push(new actionSlot(itemid,this.slots.length));\r\n        this.adjustMinTime();\r\n        refreshSideWorkers();\r\n        recipeList.canCraft();\r\n        checkCraftableStatus();\r\n    },\r\n    adjustMinTime() {\r\n        if (this.slots.length === 0) {\r\n            this.minTime = 0;\r\n            return;\r\n        }\r\n        this.minTime = Math.min(...this.slots.map(s => s.maxCraft()));\r\n    },\r\n    removeSlot(slot) {\r\n        this.slots[slot].refundMaterial();\r\n        this.slots.splice(slot,1);\r\n        this.slots.forEach((s,i) => s.slotNum = i);\r\n        this.adjustMinTime();\r\n        refreshSideWorkers();\r\n        recipeList.canCraft();\r\n        checkCraftableStatus();\r\n    },\r\n    removeBldgSlots() {\r\n        this.slots = this.slots.filter(s => s.item.recipeType === \"normal\");\r\n        this.adjustMinTime();\r\n        refreshSideWorkers();\r\n        recipeList.canCraft();\r\n        checkCraftableStatus();\r\n    },\r\n    isAlreadySlotted(id) {\r\n        return this.slots.map(s=>s.itemid).includes(id)\r\n    },\r\n    addTime(t) {\r\n        if (this.slots.length === 0) return;\r\n        const skipAnimation = t >= this.minTime;\r\n        if (!skipAnimation) {\r\n            this.slots.forEach(slot => {\r\n                slot.addTime(t,false);\r\n            });\r\n            return;\r\n        }\r\n        let timeRemaining = t;\r\n        while (timeRemaining > 0) {\r\n            const timeChunk = Math.min(timeRemaining,this.minTime);\r\n            this.slots.forEach(slot => {\r\n                slot.addTime(timeChunk,true);\r\n            });\r\n            timeRemaining -= timeChunk;\r\n        }\r\n        refreshInventoryAndMaterialPlaces();\r\n    },\r\n    upgradeSlot() {\r\n        if (this.maxSlots === 5) return;\r\n        this.maxSlots += 1;\r\n    },\r\n    autoSell(i) {\r\n        if (this.slots.length <= i) return \"\";\r\n        return this.slots[i].autoSell();\r\n    },\r\n    toggleAuto(i) {\r\n        return this.slots[i].autoSellToggle();\r\n    },\r\n    guildUsage() {\r\n        const mats = flattenArray(...[this.slots.map(s=>s.item.gcost)]);\r\n        const group = groupArray(mats);\r\n        return group\r\n    },\r\n    materialUsage() {\r\n        const mats = flattenArray(...([this.slots.map(s=>s.item.material())]))\r\n        const uniqueMats = [...new Set(mats)];\r\n        return uniqueMats;\r\n    },\r\n    freeSlots() {\r\n        return this.maxSlots - this.slots.length;\r\n    }\r\n}\r\n\r\nconst $actionSlots = $(\"#actionSlots\");\r\n\r\nclass actionSlotVisualSlotTracking {\r\n    constructor(id,status) {\r\n        this.id = id;\r\n        this.status = status;\r\n    }\r\n    addReference(i) {\r\n        this.timeRef = $(`#ASBar${i} .ASProgressBarTimer`);\r\n        this.progressRef = $(`#ASBarFill${i}`);\r\n    }\r\n}\r\n\r\nfunction newActionSlot(slot) {\r\n    const d = $(\"<div/>\").addClass(\"ASBlock\");\r\n    $(\"<div/>\").addClass(\"ASName\").attr(\"id\",\"asSlotName\"+slot.slotNum).html(slot.itemPicName()).appendTo(d);\r\n    const d2 = $(\"<div/>\").addClass(\"ASCancel\").data(\"slotNum\",slot.slotNum).appendTo(d);\r\n    $(\"<div/>\").addClass(\"ASCancelText tooltip\").attr({\"data-tooltip\": \"cancel_craft\"}).data(\"slotNum\",slot.slotNum).html(`${miscIcons.cancelSlot}`).appendTo(d2);\r\n    const d3 = $(\"<div/>\").addClass(\"ASProgressBar\").attr(\"id\",\"ASBar\"+slot.slotNum).appendTo(d);\r\n        const d3a = $(\"<div/>\").addClass(\"ASProgressBarTimer tooltip\").appendTo(d3);\r\n        if (slot.status === slotState.NEEDMATERIAL) d3a.addClass(\"matsNeeded\").attr({\"data-tooltip\": \"materials_needed\"}).html(miscIcons.alert + \"Materials Needed\");\r\n    const s3 = $(\"<span/>\").addClass(\"ProgressBarFill\").attr(\"id\",\"ASBarFill\"+slot.slotNum).appendTo(d3);\r\n    if (slot.isMastered()) s3.addClass(\"ProgressBarFillMaster\");\r\n    const d4 = $(\"<div/>\").addClass(\"ASauto tooltip\").attr(\"data-tooltip\", `autosell_${slot.autoSell().toLowerCase()}`).attr(\"id\",\"asAuto\"+slot.slotNum).data(\"slotNum\",slot.slotNum).html(miscIcons.autoSell).appendTo(d);\r\n    if (slot.autoSell() !== \"None\") d4.addClass(\"ASautoEnabled\"+slot.autoSell());\r\n    if (slot.isBuildingMaterial()) d4.hide();\r\n    if (!slot.resList) return d;\r\n    const d5 = $(\"<div/>\").addClass(\"asRes\").attr(\"id\",\"asRes\"+slot.slotNum).appendTo(d);\r\n    slot.resList().forEach(g => {\r\n        $(\"<div/>\").addClass(\"asResIcon tooltip\").attr({\"data-tooltip\":\"guild_worker\",\"data-tooltip-value\":g}).html(GuildManager.idToGuild(g).icon).appendTo(d5);\r\n    });\r\n    return d;\r\n}\r\n\r\nfunction newEmptyActionSlot() {\r\n    const d = $(\"<div/>\").addClass(\"ASBlock\");\r\n    const d1 = $(\"<div/>\").addClass(\"ASName ASEmpty\").appendTo(d);\r\n        $(\"<div/>\").addClass(\"ASEmptyIcon\").html(`${miscIcons.emptySlot}`).appendTo(d1);\r\n        $(\"<div/>\").addClass(\"ASEmptyText\").html(`Empty Slot`).appendTo(d1);\r\n    return d;\r\n}\r\n\r\nconst actionSlotVisualManager = {\r\n    slots : [],\r\n    slotCount : 0,\r\n    disableRefresh : false,\r\n    updateSlots() {\r\n        if (this.disableRefresh) return;\r\n        //slots changed, just redraw everything\r\n        if (this.slots.length !== actionSlotManager.slots.length || this.slotCount !== actionSlotManager.maxSlots) {\r\n            this.slotCount = actionSlotManager.maxSlots;\r\n            this.slots = [];\r\n            $actionSlots.empty();\r\n            actionSlotManager.slots.forEach((slot,i) => {\r\n                const newSlot = new actionSlotVisualSlotTracking(slot.item.id,slot.status);\r\n                $actionSlots.append(newActionSlot(slot));\r\n                newSlot.addReference(i);\r\n                this.slots.push(newSlot);\r\n            });\r\n            for (let i=0;i<actionSlotManager.freeSlots();i++) {\r\n                $actionSlots.append(newEmptyActionSlot());\r\n            }\r\n            return;\r\n        }\r\n        //otherwise let's just update what we have....\r\n        actionSlotManager.slots.forEach((slot,i) => {\r\n            const compareSlot = this.slots[i];\r\n            if (compareSlot.status === slotState.NEEDMATERIAL && slot.status === slotState.CRAFTING) {\r\n                //update for time format\r\n                compareSlot.timeRef.removeClass(\"matsNeeded\").attr({\"data-tooltip\": \"remaining_time\"}).html(miscIcons.time + msToTime(slot.timeRemaining()));\r\n            }\r\n            else if (compareSlot.status === slotState.CRAFTING && slot.status === slotState.NEEDMATERIAL) {\r\n                compareSlot.timeRef.addClass(\"matsNeeded\").attr({\"data-tooltip\": \"materials_needed\"}).html(miscIcons.alert + \"Materials Needed\");\r\n            }\r\n            else if (compareSlot.status === slotState.CRAFTING) {\r\n                compareSlot.progressRef.css('width', slot.progress);\r\n                compareSlot.timeRef.attr({\"data-tooltip\": \"remaining_time\"}).html(miscIcons.time + msToTime(slot.timeRemaining()));\r\n            }\r\n        });\r\n    },\r\n    updateAutoSell(e,newRarity) {\r\n        $(e.currentTarget).removeClass(\"ASautoEnabledCommon ASautoEnabledGood ASautoEnabledGreat ASautoEnabledEpic\").addClass(\"ASautoEnabled\"+newRarity);\r\n        $(e.currentTarget).attr(\"data-tooltip\", `autosell_${newRarity.toLowerCase()}`);\r\n        destroyTooltip();\r\n        generateTooltip(e);\r\n    }\r\n}\r\n\r\nfunction refreshInventoryAndMaterialPlaces() {\r\n    refreshInventoryPlaces();\r\n    //grab ALL the materials we might have consumed and just update where they might show up\r\n    actionSlotManager.materialUsage().forEach(matID => {\r\n        refreshMaterial(matID);\r\n    });\r\n}"],"file":"actionslots.js"}