{"version":3,"sources":["../../src/js/mobs.js"],"names":["MobManager","monsterDB","idCount","addMob","mob","push","idToMob","id","find","getUniqueID","generateMob","mobID","dungeon","disableEventLayers","atk","pow","floor","powGain","hp","hpGain","mobTemplate","m","Mob","MonsterHall","findMonster","console","log","MobTemplate","props","Object","assign","image","head","skill1","skill2","skill3","skill4","SkillManager","idToSkill","icon","Math","powMod","hpmax","hpMod","uniqueid","playbook","PlaybookManager","generatePlayBookFromSkills","passive","passiveSkill","save","buffs","forEach","buff","createSave","state","undefined","newBuff","BuffManager","generateSaveBuff","power","loadSave","adjustState","Combatant","$","html"],"mappings":"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","sourcesContent":["\"use strict\";\r\n\r\nconst MobManager = {\r\n    monsterDB : [],\r\n    idCount : 0,\r\n    addMob(mob) {\r\n        this.monsterDB.push(mob);\r\n    },\r\n    idToMob(id) {\r\n        return this.monsterDB.find(mob => mob.id === id);\r\n    },\r\n    getUniqueID() {\r\n        this.idCount += 1;\r\n        return this.idCount;\r\n    },\r\n    generateMob(mobID,dungeon) {\r\n        disableEventLayers();\r\n        const atk = (dungeon.pow + dungeon.floor * dungeon.powGain);\r\n        const hp = (dungeon.hp + dungeon.floor * dungeon.hpGain);\r\n        const mobTemplate = this.monsterDB.find(m=>m.id === mobID);\r\n        const mob = new Mob(mobTemplate, atk, hp);\r\n        MonsterHall.findMonster(mobID);\r\n        console.log(mob);\r\n        return mob;\r\n    },\r\n}\r\n\r\nclass MobTemplate {\r\n    constructor (props) {\r\n        Object.assign(this, props);\r\n        this.image = '<img src=\"/assets/images/enemies/' + this.id + '.gif\">';\r\n        this.head = '<img src=\"/assets/images/enemies/heads/' + this.id + '.png\">';\r\n    }\r\n    getSkillIDs() {\r\n        return [this.skill1,this.skill2,this.skill3,this.skill4];\r\n    }\r\n    getSkillIcons() {\r\n        return [SkillManager.idToSkill(this.skill1).icon,SkillManager.idToSkill(this.skill2).icon,SkillManager.idToSkill(this.skill3).icon,SkillManager.idToSkill(this.skill4).icon];\r\n    }\r\n}\r\n\r\nclass Mob extends Combatant {\r\n    constructor (mobTemplate, atk, hp) {\r\n        super(mobTemplate);\r\n        this.pow = Math.floor(atk*this.powMod);\r\n        this.hpmax = Math.floor(hp*this.hpMod);\r\n        this.hp = this.hpmax;\r\n        this.uniqueid = MobManager.getUniqueID();\r\n        this.playbook = PlaybookManager.generatePlayBookFromSkills(this.skill1,this.skill2,this.skill3,this.skill4);\r\n        this.passive = SkillManager.idToSkill(this.passiveSkill);\r\n    }\r\n    createSave() {\r\n        const save = {};\r\n        save.id = this.id;\r\n        save.uniqueid = this.uniqueid;\r\n        save.hp = this.hp;\r\n        save.buffs = [];\r\n        this.buffs.forEach(buff => {\r\n            save.buffs.push(buff.createSave());\r\n        });\r\n        save.state = this.state; \r\n        return save;\r\n    }\r\n    loadSave(save) {\r\n        this.hp = save.hp;\r\n        this.uniqueid = save.uniqueid;\r\n        if (save.buffs !== undefined) {\r\n            save.buffs.forEach(buff => {\r\n                const newBuff = BuffManager.generateSaveBuff(buff.id,this,buff.power);\r\n                newBuff.loadSave(buff);\r\n                this.buffs.push(newBuff);\r\n            });\r\n        }\r\n        this.state = save.state;\r\n        adjustState(this);\r\n    }\r\n}\r\n\r\nfunction adjustState(mob) {\r\n    if (mob.state === \"egg\") {\r\n        mob.image = '<img src=\"/assets/images/enemies/B902A.gif\">';\r\n        $(\"#mobImage\"+mob.uniqueid).html(mob.image);\r\n        mob.playbook = PlaybookManager.generatePlayBookFromSkills(\"SM902A\",\"SM902A\",\"SM902A\",\"SM902B\");\r\n    }\r\n}"],"file":"mobs.js"}